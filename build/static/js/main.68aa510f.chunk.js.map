{"version":3,"sources":["components/Admin/AdvForm.Styled.js","components/Admin/AdvForm.js","components/ContactsList/ContactsListItem/ContactsListItemStyled.js","components/ContactsList/ContactsListItem/ContactsListItem.js","components/ContactsList/ContactsList.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","components/Section/SectionStyled.js","components/Section/Section.js","components/App.js","index.js"],"names":["AdvFormStyled","styled","div","initialState","name","number","AdvForm","state","onHandleChange","e","target","value","setState","onHandleSubmit","preventDefault","contact","id","uuidv4","props","contacts","find","toLowerCase","alert","onSubmit","this","className","type","pattern","title","required","onChange","Component","ContactsListItemStyled","ContactsListItem","onDeleteContact","onClick","ContactsList","filter","includes","map","FilterStyled","Filter","SectionStyled","section","Section","children","toUpperCase","App","addNewContact","prev","parsedContacts","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68aa510f.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const AdvFormStyled = styled.div`\r\n  padding: 20px 10px;\r\n  margin: 10px;\r\n  border: 2px solid;\r\n  width: 400px;\r\n  .inputName {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    display: block;\r\n  }\r\n  .btnAdd {\r\n    display: block;\r\n    margin-top: 30px;\r\n    padding: 3px 5px;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    &:hover {\r\n      background-color: teal;\r\n    }\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\r\nimport { AdvFormStyled } from './AdvForm.Styled';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\nclass AdvForm extends Component {\r\n  state = {\r\n    ...initialState,\r\n  };\r\n\r\n  onHandleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onHandleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    const sameContactName = this.props.contacts.find(\r\n      contact => contact.name.toLowerCase() === this.state.name.toLowerCase(),\r\n    );\r\n    if (sameContactName) {\r\n      return alert(`${this.state.name} is already in contacts.`);\r\n    }\r\n\r\n    this.props.onSubmit(contact);\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <AdvFormStyled>\r\n        <form onSubmit={this.onHandleSubmit}>\r\n          <label>\r\n            Name\r\n            <input\r\n              className=\"inputName\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[A-ZA-ZА-ЯА-Я]+(([' -][A-ZA-ZА-ЯА-Я])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={name}\r\n              onChange={this.onHandleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              className=\"inputName\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={number}\r\n              onChange={this.onHandleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className=\"btnAdd\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </AdvFormStyled>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdvForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const ContactsListItemStyled = styled.div`\r\n  .btnDelete {\r\n    padding: 2px;\r\n    margin: 5px 10px;\r\n    border-radius: 6px;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: tomato;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ContactsListItemStyled } from './ContactsListItemStyled';\r\n\r\nconst ContactsListItem = ({ name, number, id, onDeleteContact }) => {\r\n  const onDeleteItem = () => {\r\n    onDeleteContact(id);\r\n  };\r\n\r\n  return (\r\n    <ContactsListItemStyled>\r\n      <li>\r\n        {name}\r\n        <span>: </span>\r\n        {number}\r\n        <button className=\"btnDelete\" type=\"button\" onClick={onDeleteItem}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    </ContactsListItemStyled>\r\n  );\r\n};\r\n\r\nContactsListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import React from 'react';\r\nimport ContactsListItem from './ContactsListItem/ContactsListItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactsList = ({ contacts, filter, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts\r\n        .filter(contact =>\r\n          contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n        )\r\n        .map(contact => (\r\n          <ContactsListItem\r\n            key={contact.id}\r\n            {...contact}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactsList;\r\n","import styled from 'styled-components';\r\n\r\nexport const FilterStyled = styled.div`\r\n  margin-left: 10px;\r\n  .inputFilter {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    display: block;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FilterStyled } from './FilterStyled';\r\n\r\nconst Filter = ({ filter, onHandleChange }) => {\r\n  return (\r\n    <FilterStyled>\r\n      <label className=\"labelFilter\">\r\n        Find contacts by name:\r\n        <input\r\n          className=\"inputFilter\"\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={onHandleChange}\r\n        />\r\n      </label>\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onHandleChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import styled from 'styled-components';\r\n\r\nexport const SectionStyled = styled.section`\r\n  .sectionTitle {\r\n    color: teal;\r\n    margin: 20px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { SectionStyled } from './SectionStyled';\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <SectionStyled>\r\n      <h2 className=\"sectionTitle\">{title.toUpperCase()}</h2>\r\n      {children}\r\n    </SectionStyled>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from 'react';\r\n\r\nimport AdvForm from './Admin/AdvForm';\r\nimport ContactsList from './ContactsList/ContactsList';\r\nimport Filter from './Filter/Filter';\r\nimport Section from './Section/Section';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n\r\n    parsedContacts && this.setState({ contacts: parsedContacts });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts } = this.state;\r\n\r\n    contacts !== prevState.contacts &&\r\n      localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  }\r\n\r\n  addNewContact = contact => {\r\n    this.setState(prev => ({\r\n      contacts: [...prev.contacts, contact],\r\n    }));\r\n  };\r\n\r\n  onHandleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onDeleteContact = id => {\r\n    this.setState(prev => ({\r\n      contacts: prev.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    return (\r\n      <>\r\n        <Section title=\"Phonebook\">\r\n          <AdvForm onSubmit={this.addNewContact} contacts={contacts} />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          <Filter filter={filter} onHandleChange={this.onHandleChange} />\r\n          <ContactsList\r\n            contacts={contacts}\r\n            filter={filter}\r\n            onDeleteContact={this.onDeleteContact}\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}